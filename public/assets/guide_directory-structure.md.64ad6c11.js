import{_ as e,c as i,o as t,d as a}from"./app.2f20f950.js";const f=JSON.parse('{"title":"Directory structure","description":"","frontmatter":{},"headers":[{"level":2,"title":"application","slug":"application","link":"#application","children":[]},{"level":2,"title":"clients","slug":"clients","link":"#clients","children":[]},{"level":2,"title":"config","slug":"config","link":"#config","children":[]},{"level":2,"title":"data","slug":"data","link":"#data","children":[]},{"level":2,"title":"db","slug":"db","link":"#db","children":[]},{"level":2,"title":"models","slug":"models","link":"#models","children":[]},{"level":2,"title":"repository","slug":"repository","link":"#repository","children":[]},{"level":2,"title":"restapi","slug":"restapi","link":"#restapi","children":[]},{"level":2,"title":"services","slug":"services","link":"#services","children":[]},{"level":2,"title":"swagger","slug":"swagger","link":"#swagger","children":[]},{"level":2,"title":"tests","slug":"tests","link":"#tests","children":[]},{"level":2,"title":"toolbin","slug":"toolbin","link":"#toolbin","children":[]},{"level":2,"title":"utils","slug":"utils","link":"#utils","children":[]}],"relativePath":"guide/directory-structure.md"}'),r={name:"guide/directory-structure.md"},n=a(`<h1 id="directory-structure" tabindex="-1">Directory structure <a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a></h1><pre>├── application
├── ci
├── clients
│   ├── ivaapi
│   ├── omegapay
│   └── voxapi
│       └── models
├── config
├── data
├── db
│   └── migrations
├── models
│   ├── apimodels
│   ├── cachemodels
│   ├── dbmodels
│   ├── dcprops
│   └── transform
├── repository
│   ├── pgrepo
│   ├── redisrepo
│   └── repoerrs
├── restapi
│   ├── errorcode
│   ├── handlers
│   │   ├── bookingshandlers
│   │   ├── healthhandlers
│   │   ├── movieshandlers
│   │   └── ticketinghandlers
│   ├── operations
│   │   ├── bookings
│   │   ├── health
│   │   ├── movies
│   │   ├── payments
│   │   ├── ticketing
│   │   └── transactions
│   └── responder
├── services
│   ├── jobs
│   ├── metadataservice
│   ├── moviesservice
│   ├── sessionservice
│   ├── srverrs
│   └── ticketingservice
│       └── seatfix
├── swagger
│   └── models
│       └── vista
│           ├── extras
│           └── payments
├── tests
├── toolbin
└── utils
</pre><h2 id="application" tabindex="-1">application <a class="header-anchor" href="#application" aria-hidden="true">#</a></h2><p>Application directory contains all initial setups for application. In this file we are setting up</p><ol><li>Logger</li><li>Database</li><li>Tracing</li><li>Clients</li><li>Cron Jobs etc</li></ol><p>this directory contains only one file which is responsible for starting and stopping server with above configurations.</p><h2 id="clients" tabindex="-1">clients <a class="header-anchor" href="#clients" aria-hidden="true">#</a></h2><p>Clients contains multiple directory like</p><pre>│   ├── ivaapi
│   ├── omegapay
│   └── voxapi
│       └── models
</pre><p>where <code>ivaapi</code> is used to connect with IVA service, <code>omegapay</code> used for payment and <code>voxapi</code> used for connecting with VOX api.</p><h2 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-hidden="true">#</a></h2><p>config directory contains all the configuration for the application. like server, database url, client id, client secrets etc.</p><h2 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-hidden="true">#</a></h2><p>this is a special directory where we are keeping all the SeatType mapping for VOX. VOX is not providing any API for SeatType mapping so we are keepting it loccally.</p><h2 id="db" tabindex="-1">db <a class="header-anchor" href="#db" aria-hidden="true">#</a></h2><p>This directory contains database related stuff like migration files etc.</p><h2 id="models" tabindex="-1">models <a class="header-anchor" href="#models" aria-hidden="true">#</a></h2><p>Models directory is keepting all the data transfer object for the application.</p><h2 id="repository" tabindex="-1">repository <a class="header-anchor" href="#repository" aria-hidden="true">#</a></h2><p>This directory contains several repository for the service, its used to intract with database and all database releated logic in this directory only.</p><h2 id="restapi" tabindex="-1">restapi <a class="header-anchor" href="#restapi" aria-hidden="true">#</a></h2><p>RestApi directory is a generated directory. It will be generated by <code>go-swagger</code> based on <code>swagger.yml</code> this directory is being generated with models, params and handlers.</p><h2 id="services" tabindex="-1">services <a class="header-anchor" href="#services" aria-hidden="true">#</a></h2><p>Services directory is keeping all the logic for interacting with different different services.</p><h2 id="swagger" tabindex="-1">swagger <a class="header-anchor" href="#swagger" aria-hidden="true">#</a></h2><p>swagger directory having <code>swagger.yml</code> and it is responsible fo generating model, handler, validation etc.</p><h2 id="tests" tabindex="-1">tests <a class="header-anchor" href="#tests" aria-hidden="true">#</a></h2><p>Tests used to keep test files.</p><h2 id="toolbin" tabindex="-1">toolbin <a class="header-anchor" href="#toolbin" aria-hidden="true">#</a></h2><p>Some tools are required to generate code like swagger. so we are keepting <code>swagger</code> and other executables into this directory.</p><h2 id="utils" tabindex="-1">utils <a class="header-anchor" href="#utils" aria-hidden="true">#</a></h2><p>As name suggest its keeping helper and utility functions.</p>`,32),s=[n];function o(l,d,c,h,p,g){return t(),i("div",null,s)}const v=e(r,[["render",o]]);export{f as __pageData,v as default};
